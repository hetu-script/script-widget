external class ListWheelParentData {
    construct
    var index
    var offset
    fun toString
}
external class RenderListWheelViewport {
    construct 
    get childManager
    get offset
    set offset(value)
    get diameterRatio
    set diameterRatio(value)
    get perspective
    set perspective(value)
    get offAxisFraction
    set offAxisFraction(value)
    get useMagnifier
    set useMagnifier(value)
    get magnification
    set magnification(value)
    get overAndUnderCenterOpacity
    set overAndUnderCenterOpacity(value)
    get itemExtent
    set itemExtent(value)
    get squeeze
    set squeeze(value)
    get renderChildrenOutsideViewport
    set renderChildrenOutsideViewport(value)
    get clipBehavior
    set clipBehavior(value)
    fun setupParentData
    fun attach
    fun detach
    get isRepaintBoundary
    fun computeMinIntrinsicWidth
    fun computeMaxIntrinsicWidth
    fun computeMinIntrinsicHeight
    fun computeMaxIntrinsicHeight
    get sizedByParent
    fun computeDryLayout
    fun indexOf
    fun scrollOffsetToIndex
    fun indexToScrollOffset
    fun performLayout
    fun paint
    fun applyPaintTransform
    fun describeApproximatePaintClip
    fun hitTestChildren
    fun getOffsetToReveal
    fun showOnScreen
    fun getMinIntrinsicWidth
    fun getMaxIntrinsicWidth
    fun getMinIntrinsicHeight
    fun getMaxIntrinsicHeight
    fun getDryLayout
    fun debugCannotComputeDryLayout
    get hasSize
    get size
    fun debugAdoptSize
    get semanticBounds
    fun debugResetSize
    fun getDistanceToBaseline
    get constraints
    fun debugAssertDoesMeetConstraints
    fun markNeedsLayout
    fun performResize
    fun hitTest
    fun globalToLocal
    fun localToGlobal
    get paintBounds
    fun handleEvent
    fun debugHandleEvent
    fun debugPaint
    fun debugFillProperties
    static const defaultDiameterRatio
    static const defaultPerspective
    static const diameterRatioZeroMessage
    static const perspectiveTooHighMessage
    static const clipBehaviorAndRenderChildrenOutsideViewportConflict
}
